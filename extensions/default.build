<?xml version="1.0"?>
<project name="boo-extensions" default="test">

	<property name="build.dir" value="build" />
	<property name="boo.dir" value="../../boo/bin" />
	<property name="dir.md.bin" value="${environment::get-folder-path('Personal')}/projects/mono/monodevelop/main/build/bin" />
	<property name="dir.md.addins" value="${environment::get-folder-path('Personal')}/.config/MonoDevelop/addins/Boo" />
	
	<include buildfile="build.properties" if="${file::exists('build.properties')}" />
	
	<include buildfile="nunit.inc" />

	<target name="test" depends="build">
		<nunit2>
			<formatter type="Plain" />
			<test>
				<assemblies basedir="${build.dir}">
					<include name="*.Tests.dll" />
					<exclude name="*.Parser.Tests.dll" />
				</assemblies>
			</test>
		</nunit2>
	</target>
	
	<target name="parser-test" depends="test">
		<nunit2>
			<formatter type="Plain" />
			<test>
				<assemblies basedir="${build.dir}">
					<include name="*.Parser.Tests.dll" />
				</assemblies>
			</test>
		</nunit2>
	</target>
	
	<target name="build" depends="Boo.Pegs, Boo.Adt, Boo.OMeta, Boo.OMeta.Parser">
	</target>
	
	<target name="Boo.Pegs" depends="init">
	
		<booc target="library" output="${build.dir}/Boo.Pegs.dll">
			<sources basedir="src/Boo.Pegs">
				<include name="*.boo" />
			</sources>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.Pegs.Tests.dll">
			<sources basedir="src/Boo.Pegs.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.Pegs.dll" />
			</references>
		</booc>
		
	</target>
	
	<target name="Boo.Adt" depends="init">
		<booc target="library" output="${build.dir}/Boo.Adt.dll">
			<sources basedir="src/Boo.Adt">
				<include name="*.boo" />
			</sources>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.Adt.Tests.dll">
			<sources basedir="src/Boo.Adt.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.Adt.dll" />
			</references>
		</booc>
	</target>
	
	<target name="Boo.OMeta" depends="Boo.Adt">
		<booc target="library" output="${build.dir}/Boo.OMeta.dll">
			<sources basedir="src/Boo.OMeta">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="Boo.Adt.dll" />
			</references>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.OMeta.Tests.dll">
			<sources basedir="src/Boo.OMeta.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.OMeta.dll" />
				<include name="Boo.Adt.dll" />
			</references>
		</booc>
	</target>
	
	<target name="Boo.OMeta.Parser" depends="Boo.Adt, Boo.OMeta">
		<booc target="library" output="${build.dir}/Boo.OMeta.Parser.dll">
			<sources basedir="src/Boo.OMeta.Parser">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="Boo.Adt.dll" />
				<include name="Boo.OMeta.dll" />
			</references>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.OMeta.Parser.Tests.dll">
			<sources basedir="src/Boo.OMeta.Parser.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.OMeta.dll" />
				<include name="Boo.Adt.dll" />
				<include name="Boo.OMeta.Parser.dll" />
			</references>
		</booc>
	</target>
	
	<target name="md" description="MonoDevelop addin" depends="init, Boo.Adt">
	
		<echo>${dir.md.bin}</echo>
		<booc
			output="${build.dir}/Boo.MonoDevelop.dll"
			target="library"
			debug="true"
			rebuild="true">
			<sources basedir="src/Boo.MonoDevelop">
				<include name="**/*.boo" />
			</sources>
			<references>
				<include name="${dir.md.bin}/MonoDevelop.*.dll" />
				<include name="${dir.md.bin}/NRefactory.dll" />
				<include name="${dir.md.bin}/../AddIns/MonoDevelop.Refactoring/MonoDevelop.Refactoring.dll" />
				<include name="${build.dir}/Boo.Adt.dll" />
			</references>
			
			<embed basedir="src/Boo.MonoDevelop">
				<include name="Boo.MonoDevelop.addin.xml" />
				<include name="Templates/*.xft.xml" />
				<include name="Templates/*.xpt.xml" />
				<include name="Icons/*.png" />
				<include name="Icons/*.Base" />
			</embed>
		</booc>
		
		<copy todir="${dir.md.addins}">
			<fileset basedir="${build.dir}">
				<include name="Boo.MonoDevelop.*" />
			</fileset>
		</copy>
		
	</target>
	
	<target name="init">
		<mkdir dir="${build.dir}" />	
		<copy file="${nunit.framework.dll}" todir="${build.dir}" />
		<loadtasks assembly="${boo.dir}/Boo.NAnt.Tasks.dll" />
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="rebuild" depends="clean, build" />

</project>
