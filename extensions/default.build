<?xml version="1.0"?>
<project name="boo-extensions" default="test">

	<property name="build.dir" value="build" />
	<property name="boo.dir" value="../../boo/bin" />

	<include buildfile="nunit.inc" />

	<target name="test" depends="build">
		<nunit2>
			<formatter type="Plain" />
			<test>
				<assemblies basedir="${build.dir}">
					<include name="*.Tests.dll" />
				</assemblies>
			</test>
		</nunit2>
	</target>
	
	<target name="build" depends="Boo.Pegs, Boo.PatternMatching, Boo.Adt, Boo.OMeta, Boo.OMeta.Parser">
	</target>
	
	<target name="Boo.Pegs" depends="Boo.PatternMatching">
	
		<booc target="library" output="${build.dir}/Boo.Pegs.dll">
			<sources basedir="src/Boo.Pegs">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="Boo.PatternMatching.dll" />
			</references>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.Pegs.Tests.dll">
			<sources basedir="src/Boo.Pegs.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.Pegs.dll" />
			</references>
		</booc>
		
	</target>
	
	<target name="Boo.PatternMatching" depends="init">
	
		<booc target="library" output="${build.dir}/Boo.PatternMatching.dll">
			<sources basedir="src/Boo.PatternMatching">
				<include name="*.boo" />
			</sources>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.PatternMatching.Tests.dll">
			<sources basedir="src/Boo.PatternMatching.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.PatternMatching.dll" />
			</references>
		</booc>
		
	</target>
	
	<target name="Boo.Adt" depends="Boo.PatternMatching">
		<booc target="library" output="${build.dir}/Boo.Adt.dll">
			<sources basedir="src/Boo.Adt">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="Boo.PatternMatching.dll" />
			</references>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.Adt.Tests.dll">
			<sources basedir="src/Boo.Adt.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.Adt.dll" />
				<include name="Boo.PatternMatching.dll" />
			</references>
		</booc>
	</target>
	
	<target name="Boo.OMeta" depends="Boo.PatternMatching, Boo.Adt">
		<booc target="library" output="${build.dir}/Boo.OMeta.dll">
			<sources basedir="src/Boo.OMeta">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="Boo.Adt.dll" />
				<include name="Boo.PatternMatching.dll" />
			</references>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.OMeta.Tests.dll">
			<sources basedir="src/Boo.OMeta.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.OMeta.dll" />
				<include name="Boo.Adt.dll" />
				<include name="Boo.PatternMatching.dll" />
			</references>
		</booc>
	</target>
	
	<target name="Boo.OMeta.Parser" depends="Boo.PatternMatching, Boo.Adt, Boo.OMeta">
		<booc target="library" output="${build.dir}/Boo.OMeta.Parser.dll">
			<sources basedir="src/Boo.OMeta.Parser">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="Boo.Adt.dll" />
				<include name="Boo.PatternMatching.dll" />
				<include name="Boo.OMeta.dll" />
			</references>
		</booc>
		
		<booc target="library" output="${build.dir}/Boo.OMeta.Parser.Tests.dll">
			<sources basedir="src/Boo.OMeta.Parser.Tests">
				<include name="*.boo" />
			</sources>
			<references basedir="${build.dir}">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.OMeta.dll" />
				<include name="Boo.Adt.dll" />
				<include name="Boo.PatternMatching.dll" />
				<include name="Boo.OMeta.Parser.dll" />
			</references>
		</booc>
	</target>
	
	<target name="init">
		<mkdir dir="${build.dir}" />	
		<loadtasks assembly="${boo.dir}/Boo.NAnt.Tasks.dll" />
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="rebuild" depends="clean, build" />

</project>
